[agent]
    interval = "10s"
    round_interval = true
    metric_batch_size = 1000
    metric_buffer_limit = 10000
    collection_jitter = "0s"
    flush_interval = "10s"
    flush_jitter = "0s"
    debug = true

# === Kafka Consumer Input ===
[[inputs.kafka_consumer]]
  brokers = ["localhost:9092"]
  topics = ["crypto-ticker-volatility"]
  consumer_group = "telegraf-fixed-test"
  offset = "newest"
  data_format = "json_v2"
  
  ## Kafka 버전 지정
  version = "2.8.0"
  
  ## Consumer 설정
  max_message_len = 1000000
  
  [[inputs.kafka_consumer.json_v2]]
    measurement_name = "crypto_volatility_new"
    timestamp_path = "value.@timestamp"
    timestamp_format = "unix_ms"
    
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "value.exchange"
      rename = "exchange"
    
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "value.symbol" 
      rename = "symbol"
    
    [[inputs.kafka_consumer.json_v2.field]]
      path = "value.price"
      rename = "price"
      type = "float"
    
    [[inputs.kafka_consumer.json_v2.field]]
      path = "value.change_rate"
      rename = "change_rate"
      type = "float"
    
    [[inputs.kafka_consumer.json_v2.field]]
      path = "value.ema_price"
      rename = "ema_price"
      type = "float"
      optional = true
    
    [[inputs.kafka_consumer.json_v2.field]]
      path = "value.deviation_rate"
      rename = "deviation_rate"
      type = "float"
      optional = true

# === File Output (for debugging) ===
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"

# === InfluxDB v2 Output ===
[[outputs.influxdb_v2]]
  urls = ["http://localhost:8086"]
  token = "UAknHge_imgtt9deG4XCQ1N9HljOAkWx56lytVQVp7V24ELv09vPSnh8ZjqNByQqVhmabcDvJ00z_8H5zWZriQ=="
  organization = "crypto-tracker"
  bucket = "crypto-metrics"
  timeout = "20s"
  insecure_skip_verify = true

